library(scales)
library(plotly)
comedy.dplyr <- vids %>%
filter(category_id == "Comedy") %>%
group_by(channel_title) %>%
summarise(count = n()) %>%
arrange(-count)
# head(comedy.dplyr) %>% ggplot(aes(x = channel_title, y = count)) + geom_col() + coord_flip()
plot_vids <- vids %>%
group_by(category_id) %>%
summarise(total = sum(views)) %>%
ungroup() %>%
ggplot(aes(x = reorder(category_id, total), y = total, text = paste("Total Views:", label = comma(total),"<br>","Category:",category_id))) +
geom_col(aes(fill = category_id)) +
scale_y_continuous(labels = comma) +
coord_flip() +
scale_y_continuous(labels = comma) +
labs(x = NULL, y = NULL, title = paste("Total Views Based on Category","<br>", "Title Dashboard")) +
theme(legend.position = "none", title = element_text(hjust = .5, size)) + theme_algoritma
library(ggplot2)
library(scales)
library(plotly)
comedy.dplyr <- vids %>%
filter(category_id == "Comedy") %>%
group_by(channel_title) %>%
summarise(count = n()) %>%
arrange(-count)
# head(comedy.dplyr) %>% ggplot(aes(x = channel_title, y = count)) + geom_col() + coord_flip()
plot_vids <- vids %>%
group_by(category_id) %>%
summarise(total = sum(views)) %>%
ungroup() %>%
ggplot(aes(x = reorder(category_id, total), y = total, text = paste("Total Views:", label = comma(total),"<br>","Category:",category_id))) +
geom_col(aes(fill = category_id)) +
coord_flip() +
scale_y_continuous(labels = comma) +
labs(x = NULL, y = NULL, title = paste("Total Views Based on Category","<br>", "Title Dashboard")) +
theme(legend.position = "none", title = element_text(hjust = .5, size)) + theme_algoritma
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views"))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
ggplotly(vids.plot2, tooltip = "text")
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views","<br>","Published on",publish_when))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
ggplotly(vids.plot2, tooltip = "text")
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views","\n","Published on",publish_when))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
ggplotly(vids.plot2, tooltip = "text")
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date))
comedy2018
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date))
comedy2018$trending_year
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(category_id == "Comedy")
comedy2018
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(category_id == "Comedy" && trending_date == 2018)
comedy2018
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(trending_year = 2018)
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(trending_year == 2018)
comedy2018
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(trending_year == 2018, category_id == "Comedy")
comedy2018
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(trending_year == 2018, category_id == "Comedy") %>%
mutate(likes_rat = likes/views)
comedy2018
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(trending_year == 2018, category_id == "Comedy") %>%
mutate(likesratio = likes/views,
dislikesratio = dislikes/views)
comedy2018
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point()
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = likesratio, fill = dislikesratio))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = dislikesratio, fill = likesratio))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = likesratio, fill = dislikesratio))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views), fill = "ratio")
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views), fill = "views")
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views, col = channel_title))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views, col = channel_title), show.legend = F)
library(lubridate)
comedy2018 <- vids %>%
mutate(trending_date = ymd(trending_date),
trending_year = year(trending_date)) %>%
filter(trending_year == 2018, category_id == "Comedy") %>%
mutate(likesratio = likes/views,
dislikesratio = dislikes/views,
channel_title = droplevels(channel_title))
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views, col = channel_title), show.legend = F)
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views, col = channel_title), show.legend = T)
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views, col = channel_title), show.legend = F)
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Dislikes Ratio", y = "Likes Ratio")
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio)) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio") + theme_algoritma
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste("Likes ratio:", likesratio, "<br>","Dislikes Ratio:",dislikesratio))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio") + theme_algoritma
ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste("Likes ratio:", likesratio, "<br>","Dislikes Ratio:",dislikesratio))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste("Likes ratio:", likesratio, "<br>","Dislikes Ratio:",dislikesratio))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma
ggplotply(comedy2018.plot)
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste("Likes ratio:", likesratio, "<br>","Dislikes Ratio:",dislikesratio))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma
ggplotly(comedy2018.plot)
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste("Likes ratio:", likesratio, "<br>","Dislikes Ratio:",dislikesratio))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma + theme(legend.position = "none")
ggplotly(comedy2018.plot)
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste(channel_title))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma + theme(legend.position = "none")
ggplotly(comedy2018.plot)
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste(channel_title))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma + theme(legend.position = "none")
ggplotly(comedy2018.plot, tooltip = "text")
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste(channel_title))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma + theme(legend.position = "none")
ggplotly(comedy2018.plot, tooltip = "all")
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste("Likes: ",likes))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma + theme(legend.position = "none")
ggplotly(comedy2018.plot, tooltip = "all")
comedy2018.plot <- ggplot(comedy2018, aes(x = likesratio, y = dislikesratio, text = paste("Likes: ",likes))) + geom_point(aes(size = views, col = channel_title), show.legend = F) + labs(x = "Likes Ratio", y = "Dislikes Ratio", title = "Likes vs Dislikes in Trending Comedy Videos 2018") + theme_algoritma + theme(legend.position = "none")
comedy2018.plotly <- ggplotly(comedy2018.plot, tooltip = "all")
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F)
vids.plot3
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value")
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count)
vids.plot3
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable)
vids.plot3
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value))
vids.plot3
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value))%>%
ggplot(aes(x = category_id, y = value)) + geom_col(fill = "Ratio") + coord_flip()
vids.plot3
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value))%>%
ggplot(aes(x = category_id, y = value)) + geom_col(fill = "ratio") + coord_flip()
vids.plot3
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value))%>%
ggplot(aes(x = category_id, y = value)) + geom_col(aes(fill = variable)) + coord_flip()
vids.plot3
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value))%>%
ggplot(aes(x = category_id, y = value)) + geom_col(aes(fill = variable), position = "dodge") + coord_flip()
vids.plot3
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value))%>%
ggplot(aes(x = order(-category_id), y = value)) + geom_col(aes(fill = variable), position = "dodge") + coord_flip()
vids.plot3
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value))%>%
ggplot(aes(x = category_id, y = value)) + geom_col(aes(fill = variable), position = "dodge") + coord_flip()
vids.plot3.ly <- ggplotly(vids.plot3)
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma
vids.plot3.ly <- ggplotly(vids.plot3)
vids.plot3.ly
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + theme(legend.title = element_blank())
vids.plot3.ly <- ggplotly(vids.plot3)
vids.plot3.ly
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + labe(title = "Likes v Dislikes v Comments in videos", x = NULL, Y = NULL)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + labs(title = "Likes v Dislikes v Comments in videos", x = NULL, Y = NULL)
vids.plot3.ly
vids.plot3.ly <- ggplotly(vids.plot3)
vids.plot3.ly
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + labs(title = "Likes v Dislikes v Comments in videos", x = NULL, Y = NULL)
vids.plot3.ly <- ggplotly(vids.plot3)
vids.plot3.ly
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + labs(x = NULL, y = NULL, title = "Likes v Dislikes v Comments in videos", x = NULL)
vids.plot3.ly <- ggplotly(vids.plot3)
vids.plot3.ly
library(tidyr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + labs(x = NULL, y = NULL, title = "Likes v Dislikes v Comments in videos", x = NULL) + theme(legend.title = element_blank())
vids.plot3.ly <- ggplotly(vids.plot3)
library(ggpubr)
library(magrittr)
library(ggpubr)
ggarrange(vids.plot2, vids.plot3, nrow = 2, heights = c(0.4,0.6))
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views","\n","Published on",publish_when))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
vids.plot3.ly <- ggplotly(vids.plot2, tooltip = "text")
ggarrange(vids.plot2.ly, vids.plot3.ly, nrow = 2, heights = c(0.4,0.6))
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views","\n","Published on",publish_when))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
vids.plot3.ly <- ggplotly(vids.plot2, tooltip = "text")
ggarrange(vids.plot2.ly, vids.plot3.ly, nrow = 2, heights = c(0.4,0.6))
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views","\n","Published on",publish_when))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
vids.plot2.ly <- ggplotly(vids.plot2, tooltip = "text")
library(tidyr)
library(magrittr)
library(ggpubr)
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + labs(x = NULL, y = NULL, title = "Likes v Dislikes v Comments in videos", x = NULL) + theme(legend.title = element_blank())
vids.plot3.ly <- ggplotly(vids.plot3)
ggarrange(vids.plot2.ly, vids.plot3.ly, nrow = 2, heights = c(0.4,0.6))
ggarrange(vids.plot2, vids.plot3, nrow = 2, heights = c(0.4,0.6))
ggexport(vids.plot12, filename = "vids_plot12.jpeg")
vids.plot12 <- ggarrange(vids.plot2, vids.plot3, nrow = 2, heights = c(0.4,0.6))
ggexport(vids.plot12, filename = "vids_plot12.jpeg")
ggexport(vids.plot12, filename = "vids_plot12.pdf")
subplot(vids.plot2.ly, vids.plot3.ly, nrows = 2)
subplot(vids.plot2.ly, vids.plot3.ly, nrows = 2, heights = c(0.4,0.6))
install.packages(c("flexdashboard", "shiny", "shinydashboard"))
library(flexdashboard)
library(shiny)
library(shinydashboard)
install.packages("graphics")
library(flexdashboard)
library(tidyr)
library(magrittr)
library(ggpubr)
library(lubridate)
theme_algoritma <- theme(legend.key = element_rect(fill="black"),
legend.background = element_rect(color="white", fill="#263238"),
plot.subtitle = element_text(size=6, color="white"),
panel.background = element_rect(fill="#dddddd"),
panel.border = element_rect(fill=NA),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="darkgrey", linetype=2),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill="#263238"),
text = element_text(color="white"),
axis.text = element_text(color="white")
)
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views","\n","Published on",publish_when))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
library(flexdashboard)
library(tidyr)
library(magrittr)
library(ggpubr)
library(lubridate)
theme_algoritma <- theme(legend.key = element_rect(fill="black"),
legend.background = element_rect(color="white", fill="#263238"),
plot.subtitle = element_text(size=6, color="white"),
panel.background = element_rect(fill="#dddddd"),
panel.border = element_rect(fill=NA),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="darkgrey", linetype=2),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill="#263238"),
text = element_text(color="white"),
axis.text = element_text(color="white")
)
library(flexdashboard)
library(tidyr)
library(magrittr)
library(ggpubr)
library(lubridate)
library(ggplot2)
library(scales)
library(plotly)
theme_algoritma <- theme(legend.key = element_rect(fill="black"),
legend.background = element_rect(color="white", fill="#263238"),
plot.subtitle = element_text(size=6, color="white"),
panel.background = element_rect(fill="#dddddd"),
panel.border = element_rect(fill=NA),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="darkgrey", linetype=2),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill="#263238"),
text = element_text(color="white"),
axis.text = element_text(color="white")
)
vids.plot2 <- vids %>%
mutate(publish_wday = factor(publish_wday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
group_by(publish_wday, publish_when) %>%
summarise(total_views = sum(views)) %>%
ggplot(aes(publish_wday, y = total_views, text = paste(comma(total_views), "views","\n","Published on",publish_when))) +
geom_col(aes(fill = publish_when), position = "dodge") +
labs(x = NULL, y = NULL, title = "Total Views Based on Publish Time") +
theme(legend.title = element_blank()) +
theme_algoritma +
scale_y_continuous(labels = comma)
vids.plot2.ly <- ggplotly(vids.plot2, tooltip = "text")
vids.plot3 <- vids %>%
filter(comments_disabled == F) %>%
gather(key = "variable", value = "value", likes, dislikes, comment_count) %>%
group_by(category_id, variable) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = category_id, y = value)) +
geom_col(aes(fill = variable), position = "dodge") +
coord_flip() + theme_algoritma + labs(x = NULL, y = NULL, title = "Likes v Dislikes v Comments in videos", x = NULL) + theme(legend.title = element_blank())
vids.plot3.ly <- ggplotly(vids.plot3)
library(flexdashboard)
library(tidyr)
library(magrittr)
library(ggpubr)
library(lubridate)
library(ggplot2)
library(scales)
library(plotly)
library(dplyr)
library(utils)
library(knitr)
vids <- read.csv("IP/IP/IP/youtubetrends.csv")
theme_algoritma <- theme(legend.key = element_rect(fill="black"),
legend.background = element_rect(color="white", fill="#263238"),
plot.subtitle = element_text(size=6, color="white"),
panel.background = element_rect(fill="#dddddd"),
panel.border = element_rect(fill=NA),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="darkgrey", linetype=2),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill="#263238"),
text = element_text(color="white"),
axis.text = element_text(color="white")
)
tops6 <- vids %>%
filter(category_id == "comedy") %>%
select(title, likes, views, dislikes) %>%
arrange(-Views) %>%
head()
kable(tops6)
tops6
tops6 <- vids %>%
filter(category_id == "comedy") %>%
select(title, likes, views, dislikes) %>%
arrange(-Views) %>%
head()
kable(tops6)
tops6
tops6 <- vids %>%
filter(category_id == "Comedy") %>%
select(title, likes, views, dislikes) %>%
arrange(-Views) %>%
head()
tops6 <- vids %>%
filter(category_id == "Comedy") %>%
select(title, likes, views, dislikes) %>%
arrange(-views) %>%
head()
kable(tops6)
runApp('shinyTest')
library(shiny)
library(shiny)
remove.packages(lib = shiny)
remove.packages(pkgs = "shiny", lib = shiny)
remove.packages(pkgs = "shiny", lib = "shiny")
